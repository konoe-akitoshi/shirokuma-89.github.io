---
layout: post
title:  "NucleoにDFUで書き込む"
date:   2021-03-05
image:  011-020/018/top.jpg
tags:  [STM32,PlatformIO]
---

どうもこんにちわ！しろくま＠胡瓜です。チュイーン

## 概要

約一ヶ月ぐらいの引き篭もり期間中にSTM32マイコンの勉強をしようと思っているので、今僕のTwitterのタイムラインやブログ記事がSTM32関連で埋め尽くされています。別にST社さんに謎圧力かけられているわけでもなんでもないです。（STさんごめんなさい）

今回はマイコンに直接USBを接続して書き込むDFUを試してみたので載せておきます。

## 環境

- macOS Big Sur 11.2.2
- VS Code 1.53.2
- Nucleo F446-RE
- PlatformIO Core 5.1.0　Home 3.3.3
- 九時起床の白熊

## dfu-toolを入れる

僕はMacbookを使っているので、とりあえずdfu-toolを入れることにしました。ターミナルを開いて、

{% highlight sh %}
$ brew install dfu-util
{% endhighlight %}

と叩くと、勝手に入れてくれます。あ、もちろん皆さんHomebrewは入ってますよね…？

## 配線

まず、NucleoのJP5をExternal側にします。そして、USB端子のD-をPA11、D+をPA12に接続します。また、BOOT0とVDDをジャンパーします。この状態でUSB端子（ST-Linkではないほう）に挿す、またはリセットボタンを押すと自動的にDFUモードになります。

![]({{site.baseurl}}/img/011-020/018/001.png)

Macの人はこんな感じで認識されるはずです。
Windowsの人はデバイスマネージャでみれると思います。（←未検証）

## パソコン側の設定

プロジェクトの`platformio.ini`に、以下を追加します。

{% highlight ini %}
upload_protocol = dfu
{% endhighlight %}

あとは、マイコンがDFUモードになっている状態で書き込みボタンを押すだけです。（よくわからなかったらジャンパーして、リセットボタンを押してください。）

![]({{site.baseurl}}/img/011-020/018/002.png)

こんな感じで書き込めるはずです。

## サンプルプログラム

適当なプログラムを作るのすら面倒くさい人へ贈る、ただのLチカプログラムです。テストなどでお使いください。言語はArduinoです。

<script src="https://gist.github.com/shirokuma-89/bd9137fd1c18e49f40224783078fc015.js"></script>

## ふりかえり

### メリット

- とにかくほとんど配線しなくていい。
- 普通に動く

### デメリット

- Serial.print()系が使えなくてめっちゃ不便
- デバッガが使えない
- いちいちDFUモードにしないと書き込めないのが面倒すぎる
- Arduino ISPとして使えない

です。個人的な結論としては、「素直にST-Linkを使うべし」って感じです。デメリットに対するメリットが少なすぎるので、今後この方法で書き込みをすることはないんじゃないかなって思います。

ただ、手段を持っておくのは悪いことではないのでいい経験になりました。

## まとめ

- DFUはあんまりメリットない
- ST-Link万歳